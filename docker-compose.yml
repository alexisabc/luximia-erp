# docker-compose.yml
services:
  ### SERVICIO PARA DB ###
  db:
    image: postgres:16
    container_name: luximia-db-local
    environment:
      - POSTGRES_DB=luximiadb
      - POSTGRES_USER=luximiauser
      - POSTGRES_PASSWORD=luximiapass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  ### SERVICIO PARA EL BACKEND ###
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: luximia-backend-local
    #command: tail -f /dev/null
    command: bash run.sh
    volumes:
      - ./backend:/app
      - ./assets:/app/assets
    ports:
      - "8000:10000"
    depends_on:
      - db
      - mailhog
    env_file:
      - ./.env

  ### SERVICIO PARA EL FRONTEND ###
  frontend:
    build:
      context: ./frontend/luximia_erp_ui  # El contexto es la carpeta del frontend
      dockerfile: Dockerfile # El Dockerfile dentro de esa carpeta
    container_name: luximia-frontend-local
    ports:
      - "3000:3000"
    volumes:
      # Monta el código del frontend para que los cambios se reflejen en vivo (hot-reloading)
      - ./frontend:/app
      # Evita que la carpeta local node_modules sobreescriba la del contenedor
      - /app/node_modules
       # Monta la carpeta de assets en /assets dentro del contenedor
      - ./assets:/assets
    depends_on:
      - backend # Opcional, pero bueno para controlar el orden de arranque
    env_file:
      - ./.env # Si tu frontend también necesita variables de entorno

  ### SERVICIO PARA CORREOS ###
  mailhog:
    image: mailhog/mailhog
    container_name: luximia-mailhog-local
    ports:
      - "1025:1025" # Puerto SMTP para que Django envíe correos
      - "8025:8025" # Interfaz web para ver los correos


volumes:
  postgres_data: